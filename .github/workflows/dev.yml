name: Dev CI/CD

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  APP_ENV: dev
  APP_NAME_DEV: ci_cd_demo_dev
  APP_VERSION: 0.1.0

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      APP_ENV: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      # - name: Run tests
      #   run: pytest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.APP_NAME_DEV }}:${{ env.APP_VERSION }}, ${{ env.APP_NAME_DEV }}:latest
          build-args: |
            APP_ENV=${{ env.APP_ENV }}
            APP_VERSION=${{ env.APP_VERSION }}
          
      - name: Deploy to dev environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USERNAME }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/myapp
            export APP_NAME_DEV=${{ env.APP_NAME_DEV }}
            docker-compose -f compose-dev.yml down
            docker-compose -f compose-dev.yml pull
            docker-compose -f compose-dev.yml up -d

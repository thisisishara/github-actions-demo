name: Prod CI/CD

on:
  pull_request:
    branches: [ main ]
    types: [closed]

env:
  APP_ENV: prod
  APP_NAME: ci_cd_demo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      APP_ENV: prod
    if: github.event.pull_request.merged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest test-app.py

      - name: Determine version number
        id: version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.CI_CD_DEMO_GITHUB_TOKEN }}
          release_branches: "main"
          pre_release_branches: "dev"
          tag_prefix: "v"
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Create .env file
        run: echo "APP_VERSION=${{ steps.version.outputs.new_tag  }}" >> .env
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.APP_NAME }}:${{ steps.version.outputs.tag }}
      #     build-args: |
      #       APP_ENV=${{ env.APP_ENV }}
      #       APP_VERSION=${{ steps.version.outputs.tag }}
          
      # - name: Deploy to prod environment
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.PROD_SERVER_HOST }}
      #     username: ${{ secrets.PROD_SERVER_USERNAME }}
      #     key: ${{ secrets.PROD_SERVER_SSH_KEY }}
      #     script: |
      #       cd /home/ubuntu/myapp
      #       export APP_NAME=${{ env.APP_NAME }}
      #       docker-compose down
      #       docker-compose pull
      #       docker-compose up -d

      - name: Create GitHub release
        uses: actions/create-release@v1
        # if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.CI_CD_DEMO_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          release_name: Release ${{ steps.version.outputs.new_tag }}
          body: |
            Release ${{ steps.version.outputs.new_tag }}

            Changes since last release:
            ${{ steps.version.outputs.changelog }}
          draft: false
          prerelease: false
          commitish: main
